// Code generated by athanor-go.
// DO NOT EDIT.

package {{ .PackageName }}

import (
	"context"
	"fmt"

	sdk "github.com/alchematik/athanor-go/sdk/provider/value"
)

type {{ .Type }} struct {
	Identifier {{ .Type }}Identifier
	Config     {{ .Type }}Config
	Attrs      {{ .Type }}Attrs
}

func (x {{ .Type }}) ToResourceValue() (sdk.Resource, error) {
	id, err := x.Identifier.ToValue()
	if err != nil {
		return sdk.Resource{}, nil
	}

	config, err := x.Config.ToValue()
	if err != nil {
		return sdk.Resource{}, nil
	}

	attrs, err := x.Attrs.ToValue()
	if err != nil {
		return sdk.Resource{}, nil
	}

	return sdk.Resource{
		Identifier: id,
		Config:     config,
		Attrs:      attrs,
	}, nil
}

type {{ .Type }}Getter interface {
	Get{{ .Type }}(context.Context, {{ .Type }}Identifier) ({{ .Type }}, error)
}

type {{ .Type }}Creator interface {
	Create{{ .Type }}(context.Context, {{ .Type }}Identifier, {{ .Type }}Config) ({{ .Type }}, error)
}

type {{ .Type }}Updator interface {
	Update{{ .Type }}(context.Context, {{ .Type }}Identifier, {{ .Type }}Config, []sdk.UpdateMaskField) ({{ .Type }}, error)
}

type {{ .Type }}Deleter interface {
	Delete{{ .Type }}(context.Context, {{ .Type }}Identifier) error
}

type {{ .Type }}Handler struct {
	{{ .Type }}Getter {{ .Type }}Getter
	{{ .Type }}Creator {{ .Type }}Creator
	{{ .Type }}Updator {{ .Type }}Updator
	{{ .Type }}Deleter {{ .Type }}Deleter
}

func (h {{ .Type }}Handler) GetResource(ctx context.Context, id sdk.Identifier) (sdk.Resource, error) {
	if h.{{ .Type }}Getter == nil {
		return sdk.Resource{}, fmt.Errorf("unimplemented")
	}

	idVal, err := Parse{{ .Type }}Identifier(id)
	if err != nil {
		return sdk.Resource{}, err
	}

	r, err := h.{{ .Type }}Getter.Get{{ .Type }}(ctx, idVal)
	if err != nil {
		return sdk.Resource{}, err
	}

	return r.ToResourceValue()
}

func (h {{ .Type }}Handler) CreateResource(ctx context.Context, id sdk.Identifier, config any) (sdk.Resource, error) {
	if h.{{ .Type }}Creator == nil {
		return sdk.Resource{}, fmt.Errorf("unimplemented")
	}

	idVal, err := Parse{{ .Type }}Identifier(id)
	if err != nil {
		return sdk.Resource{}, err
	}

	configVal, err := Parse{{ .Type }}Config(config)
	if err != nil {
		return sdk.Resource{}, err
	}

	r, err := h.{{ .Type }}Creator.Create{{ .Type }}(ctx, idVal, configVal)
	if err != nil {
		return sdk.Resource{}, err
	}

	return r.ToResourceValue()
}

func (h {{ .Type }}Handler) UpdateResource(ctx context.Context, id sdk.Identifier, config any, mask []sdk.UpdateMaskField) (sdk.Resource, error) {
	if h.{{ .Type }}Updator == nil {
		return sdk.Resource{}, fmt.Errorf("unimplemented")
	}

	idVal, err := Parse{{ .Type }}Identifier(id)
	if err != nil {
		return sdk.Resource{}, err
	}

	configVal, err := Parse{{ .Type }}Config(config)
	if err != nil {
		return sdk.Resource{}, err
	}

	r, err := h.{{ .Type }}Updator.Update{{ .Type }}(ctx, idVal, configVal, mask)
	if err != nil {
		return sdk.Resource{}, err
	}

	return r.ToResourceValue()
}

func (h {{ .Type }}Handler) DeleteResource(ctx context.Context, id sdk.Identifier) error {
	if h.{{ .Type }}Deleter == nil {
		return fmt.Errorf("unimplemented")
	}

	idVal, err := Parse{{ .Type }}Identifier(id)
	if err != nil {
		return err
	}

	return h.{{ .Type }}Deleter.Delete{{ .Type }}(ctx, idVal)
}
