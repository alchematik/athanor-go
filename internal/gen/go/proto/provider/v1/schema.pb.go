// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: provider/v1/schema.proto

package providerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version   string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Resources []*ResourceSchema `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{0}
}

func (x *Schema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Schema) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Schema) GetResources() []*ResourceSchema {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ResourceSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string       `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Identifier *FieldSchema `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Config     *FieldSchema `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Attrs      *FieldSchema `protobuf:"bytes,4,opt,name=attrs,proto3" json:"attrs,omitempty"`
}

func (x *ResourceSchema) Reset() {
	*x = ResourceSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSchema) ProtoMessage() {}

func (x *ResourceSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSchema.ProtoReflect.Descriptor instead.
func (*ResourceSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceSchema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceSchema) GetIdentifier() *FieldSchema {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ResourceSchema) GetConfig() *FieldSchema {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ResourceSchema) GetAttrs() *FieldSchema {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type FieldSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*FieldSchema_StringSchema
	//	*FieldSchema_BoolSchema
	//	*FieldSchema_MapSchema
	//	*FieldSchema_StructSchema
	//	*FieldSchema_FileSchema
	//	*FieldSchema_IdentifierSchema
	//	*FieldSchema_ListSchema
	Type isFieldSchema_Type `protobuf_oneof:"type"`
}

func (x *FieldSchema) Reset() {
	*x = FieldSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldSchema) ProtoMessage() {}

func (x *FieldSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldSchema.ProtoReflect.Descriptor instead.
func (*FieldSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{2}
}

func (m *FieldSchema) GetType() isFieldSchema_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FieldSchema) GetStringSchema() *StringSchema {
	if x, ok := x.GetType().(*FieldSchema_StringSchema); ok {
		return x.StringSchema
	}
	return nil
}

func (x *FieldSchema) GetBoolSchema() *BoolSchema {
	if x, ok := x.GetType().(*FieldSchema_BoolSchema); ok {
		return x.BoolSchema
	}
	return nil
}

func (x *FieldSchema) GetMapSchema() *MapSchema {
	if x, ok := x.GetType().(*FieldSchema_MapSchema); ok {
		return x.MapSchema
	}
	return nil
}

func (x *FieldSchema) GetStructSchema() *StructSchema {
	if x, ok := x.GetType().(*FieldSchema_StructSchema); ok {
		return x.StructSchema
	}
	return nil
}

func (x *FieldSchema) GetFileSchema() *FileSchema {
	if x, ok := x.GetType().(*FieldSchema_FileSchema); ok {
		return x.FileSchema
	}
	return nil
}

func (x *FieldSchema) GetIdentifierSchema() *IdentifierSchema {
	if x, ok := x.GetType().(*FieldSchema_IdentifierSchema); ok {
		return x.IdentifierSchema
	}
	return nil
}

func (x *FieldSchema) GetListSchema() *ListSchema {
	if x, ok := x.GetType().(*FieldSchema_ListSchema); ok {
		return x.ListSchema
	}
	return nil
}

type isFieldSchema_Type interface {
	isFieldSchema_Type()
}

type FieldSchema_StringSchema struct {
	StringSchema *StringSchema `protobuf:"bytes,1,opt,name=string_schema,json=stringSchema,proto3,oneof"`
}

type FieldSchema_BoolSchema struct {
	BoolSchema *BoolSchema `protobuf:"bytes,2,opt,name=bool_schema,json=boolSchema,proto3,oneof"`
}

type FieldSchema_MapSchema struct {
	MapSchema *MapSchema `protobuf:"bytes,3,opt,name=map_schema,json=mapSchema,proto3,oneof"`
}

type FieldSchema_StructSchema struct {
	StructSchema *StructSchema `protobuf:"bytes,4,opt,name=struct_schema,json=structSchema,proto3,oneof"`
}

type FieldSchema_FileSchema struct {
	FileSchema *FileSchema `protobuf:"bytes,5,opt,name=file_schema,json=fileSchema,proto3,oneof"`
}

type FieldSchema_IdentifierSchema struct {
	IdentifierSchema *IdentifierSchema `protobuf:"bytes,6,opt,name=identifier_schema,json=identifierSchema,proto3,oneof"`
}

type FieldSchema_ListSchema struct {
	ListSchema *ListSchema `protobuf:"bytes,7,opt,name=list_schema,json=listSchema,proto3,oneof"`
}

func (*FieldSchema_StringSchema) isFieldSchema_Type() {}

func (*FieldSchema_BoolSchema) isFieldSchema_Type() {}

func (*FieldSchema_MapSchema) isFieldSchema_Type() {}

func (*FieldSchema_StructSchema) isFieldSchema_Type() {}

func (*FieldSchema_FileSchema) isFieldSchema_Type() {}

func (*FieldSchema_IdentifierSchema) isFieldSchema_Type() {}

func (*FieldSchema_ListSchema) isFieldSchema_Type() {}

type StringSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StringSchema) Reset() {
	*x = StringSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringSchema) ProtoMessage() {}

func (x *StringSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringSchema.ProtoReflect.Descriptor instead.
func (*StringSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{3}
}

type BoolSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BoolSchema) Reset() {
	*x = BoolSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolSchema) ProtoMessage() {}

func (x *BoolSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolSchema.ProtoReflect.Descriptor instead.
func (*BoolSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{4}
}

type MapSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *FieldSchema `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MapSchema) Reset() {
	*x = MapSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSchema) ProtoMessage() {}

func (x *MapSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSchema.ProtoReflect.Descriptor instead.
func (*MapSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{5}
}

func (x *MapSchema) GetValue() *FieldSchema {
	if x != nil {
		return x.Value
	}
	return nil
}

type StructSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Fields map[string]*FieldSchema `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StructSchema) Reset() {
	*x = StructSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructSchema) ProtoMessage() {}

func (x *StructSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructSchema.ProtoReflect.Descriptor instead.
func (*StructSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{6}
}

func (x *StructSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StructSchema) GetFields() map[string]*FieldSchema {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FileSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileSchema) Reset() {
	*x = FileSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSchema) ProtoMessage() {}

func (x *FileSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSchema.ProtoReflect.Descriptor instead.
func (*FileSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{7}
}

type IdentifierSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IdentifierSchema) Reset() {
	*x = IdentifierSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifierSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifierSchema) ProtoMessage() {}

func (x *IdentifierSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifierSchema.ProtoReflect.Descriptor instead.
func (*IdentifierSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{8}
}

type ListSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Element *FieldSchema `protobuf:"bytes,1,opt,name=element,proto3" json:"element,omitempty"`
}

func (x *ListSchema) Reset() {
	*x = ListSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSchema) ProtoMessage() {}

func (x *ListSchema) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSchema.ProtoReflect.Descriptor instead.
func (*ListSchema) Descriptor() ([]byte, []int) {
	return file_provider_v1_schema_proto_rawDescGZIP(), []int{9}
}

func (x *ListSchema) GetElement() *FieldSchema {
	if x != nil {
		return x.Element
	}
	return nil
}

var File_provider_v1_schema_proto protoreflect.FileDescriptor

var file_provider_v1_schema_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x61, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x84, 0x01, 0x0a, 0x06, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0xf9, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74,
	0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0xd9, 0x04,
	0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x53, 0x0a,
	0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69,
	0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x4d, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x4a, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74,
	0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x53, 0x0a,
	0x0d, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69,
	0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x4d, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x5f, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61,
	0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00,
	0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x4d, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x0c, 0x0a, 0x0a, 0x42, 0x6f, 0x6f,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x4e, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b,
	0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x66,
	0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61,
	0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0c, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x45, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x9b, 0x02,
	0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b,
	0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x74, 0x68, 0x61, 0x6e,
	0x6f, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x41, 0x50, 0xaa, 0x02, 0x1e, 0x41, 0x6c, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x41, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1e, 0x41, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x5c, 0x41, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x5c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2a, 0x41, 0x6c, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x5c, 0x41, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x5c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x21, 0x41, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x3a, 0x3a, 0x41, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x3a, 0x3a, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_provider_v1_schema_proto_rawDescOnce sync.Once
	file_provider_v1_schema_proto_rawDescData = file_provider_v1_schema_proto_rawDesc
)

func file_provider_v1_schema_proto_rawDescGZIP() []byte {
	file_provider_v1_schema_proto_rawDescOnce.Do(func() {
		file_provider_v1_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_provider_v1_schema_proto_rawDescData)
	})
	return file_provider_v1_schema_proto_rawDescData
}

var file_provider_v1_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_provider_v1_schema_proto_goTypes = []interface{}{
	(*Schema)(nil),           // 0: alchematik.athanor.provider.v1.Schema
	(*ResourceSchema)(nil),   // 1: alchematik.athanor.provider.v1.ResourceSchema
	(*FieldSchema)(nil),      // 2: alchematik.athanor.provider.v1.FieldSchema
	(*StringSchema)(nil),     // 3: alchematik.athanor.provider.v1.StringSchema
	(*BoolSchema)(nil),       // 4: alchematik.athanor.provider.v1.BoolSchema
	(*MapSchema)(nil),        // 5: alchematik.athanor.provider.v1.MapSchema
	(*StructSchema)(nil),     // 6: alchematik.athanor.provider.v1.StructSchema
	(*FileSchema)(nil),       // 7: alchematik.athanor.provider.v1.FileSchema
	(*IdentifierSchema)(nil), // 8: alchematik.athanor.provider.v1.IdentifierSchema
	(*ListSchema)(nil),       // 9: alchematik.athanor.provider.v1.ListSchema
	nil,                      // 10: alchematik.athanor.provider.v1.StructSchema.FieldsEntry
}
var file_provider_v1_schema_proto_depIdxs = []int32{
	1,  // 0: alchematik.athanor.provider.v1.Schema.resources:type_name -> alchematik.athanor.provider.v1.ResourceSchema
	2,  // 1: alchematik.athanor.provider.v1.ResourceSchema.identifier:type_name -> alchematik.athanor.provider.v1.FieldSchema
	2,  // 2: alchematik.athanor.provider.v1.ResourceSchema.config:type_name -> alchematik.athanor.provider.v1.FieldSchema
	2,  // 3: alchematik.athanor.provider.v1.ResourceSchema.attrs:type_name -> alchematik.athanor.provider.v1.FieldSchema
	3,  // 4: alchematik.athanor.provider.v1.FieldSchema.string_schema:type_name -> alchematik.athanor.provider.v1.StringSchema
	4,  // 5: alchematik.athanor.provider.v1.FieldSchema.bool_schema:type_name -> alchematik.athanor.provider.v1.BoolSchema
	5,  // 6: alchematik.athanor.provider.v1.FieldSchema.map_schema:type_name -> alchematik.athanor.provider.v1.MapSchema
	6,  // 7: alchematik.athanor.provider.v1.FieldSchema.struct_schema:type_name -> alchematik.athanor.provider.v1.StructSchema
	7,  // 8: alchematik.athanor.provider.v1.FieldSchema.file_schema:type_name -> alchematik.athanor.provider.v1.FileSchema
	8,  // 9: alchematik.athanor.provider.v1.FieldSchema.identifier_schema:type_name -> alchematik.athanor.provider.v1.IdentifierSchema
	9,  // 10: alchematik.athanor.provider.v1.FieldSchema.list_schema:type_name -> alchematik.athanor.provider.v1.ListSchema
	2,  // 11: alchematik.athanor.provider.v1.MapSchema.value:type_name -> alchematik.athanor.provider.v1.FieldSchema
	10, // 12: alchematik.athanor.provider.v1.StructSchema.fields:type_name -> alchematik.athanor.provider.v1.StructSchema.FieldsEntry
	2,  // 13: alchematik.athanor.provider.v1.ListSchema.element:type_name -> alchematik.athanor.provider.v1.FieldSchema
	2,  // 14: alchematik.athanor.provider.v1.StructSchema.FieldsEntry.value:type_name -> alchematik.athanor.provider.v1.FieldSchema
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_provider_v1_schema_proto_init() }
func file_provider_v1_schema_proto_init() {
	if File_provider_v1_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_provider_v1_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifierSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_schema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_provider_v1_schema_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*FieldSchema_StringSchema)(nil),
		(*FieldSchema_BoolSchema)(nil),
		(*FieldSchema_MapSchema)(nil),
		(*FieldSchema_StructSchema)(nil),
		(*FieldSchema_FileSchema)(nil),
		(*FieldSchema_IdentifierSchema)(nil),
		(*FieldSchema_ListSchema)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_provider_v1_schema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_provider_v1_schema_proto_goTypes,
		DependencyIndexes: file_provider_v1_schema_proto_depIdxs,
		MessageInfos:      file_provider_v1_schema_proto_msgTypes,
	}.Build()
	File_provider_v1_schema_proto = out.File
	file_provider_v1_schema_proto_rawDesc = nil
	file_provider_v1_schema_proto_goTypes = nil
	file_provider_v1_schema_proto_depIdxs = nil
}
