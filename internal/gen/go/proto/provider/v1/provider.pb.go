// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: provider/v1/provider.proto

package providerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation int32

const (
	Operation_OPERATION_EMPTY  Operation = 0
	Operation_OPERATION_UPDATE Operation = 1
	Operation_OPERATION_DELETE Operation = 2
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "OPERATION_EMPTY",
		1: "OPERATION_UPDATE",
		2: "OPERATION_DELETE",
	}
	Operation_value = map[string]int32{
		"OPERATION_EMPTY":  0,
		"OPERATION_UPDATE": 1,
		"OPERATION_DELETE": 2,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_provider_v1_provider_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_provider_v1_provider_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{0}
}

type GetResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *Value `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *GetResourceRequest) Reset() {
	*x = GetResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceRequest) ProtoMessage() {}

func (x *GetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceRequest.ProtoReflect.Descriptor instead.
func (*GetResourceRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{0}
}

func (x *GetResourceRequest) GetIdentifier() *Value {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type GetResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetResourceResponse) Reset() {
	*x = GetResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceResponse) ProtoMessage() {}

func (x *GetResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceResponse.ProtoReflect.Descriptor instead.
func (*GetResourceResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{1}
}

func (x *GetResourceResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type CreateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *Value `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Config     *Value `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *CreateResourceRequest) Reset() {
	*x = CreateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceRequest) ProtoMessage() {}

func (x *CreateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateResourceRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{2}
}

func (x *CreateResourceRequest) GetIdentifier() *Value {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *CreateResourceRequest) GetConfig() *Value {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *CreateResourceResponse) Reset() {
	*x = CreateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceResponse) ProtoMessage() {}

func (x *CreateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateResourceResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{3}
}

func (x *CreateResourceResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type DeleteResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *Value `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *DeleteResourceRequest) Reset() {
	*x = DeleteResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceRequest) ProtoMessage() {}

func (x *DeleteResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteResourceRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteResourceRequest) GetIdentifier() *Value {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type DeleteResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResourceResponse) Reset() {
	*x = DeleteResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceResponse) ProtoMessage() {}

func (x *DeleteResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteResourceResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{5}
}

type UpdateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *Value   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Config     *Value   `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Mask       []*Field `protobuf:"bytes,3,rep,name=mask,proto3" json:"mask,omitempty"`
}

func (x *UpdateResourceRequest) Reset() {
	*x = UpdateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceRequest) ProtoMessage() {}

func (x *UpdateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateResourceRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateResourceRequest) GetIdentifier() *Value {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *UpdateResourceRequest) GetConfig() *Value {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateResourceRequest) GetMask() []*Field {
	if x != nil {
		return x.Mask
	}
	return nil
}

type UpdateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *UpdateResourceResponse) Reset() {
	*x = UpdateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceResponse) ProtoMessage() {}

func (x *UpdateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateResourceResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateResourceResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SubFields []*Field  `protobuf:"bytes,2,rep,name=sub_fields,json=subFields,proto3" json:"sub_fields,omitempty"`
	Operation Operation `protobuf:"varint,3,opt,name=operation,proto3,enum=alchematik.athanor.provider.v1.Operation" json:"operation,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{8}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetSubFields() []*Field {
	if x != nil {
		return x.SubFields
	}
	return nil
}

func (x *Field) GetOperation() Operation {
	if x != nil {
		return x.Operation
	}
	return Operation_OPERATION_EMPTY
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*State_Resource
	Type isState_Type `protobuf_oneof:"type"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{9}
}

func (m *State) GetType() isState_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *State) GetResource() *Resource {
	if x, ok := x.GetType().(*State_Resource); ok {
		return x.Resource
	}
	return nil
}

type isState_Type interface {
	isState_Type()
}

type State_Resource struct {
	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3,oneof"`
}

func (*State_Resource) isState_Type() {}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *Value `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Config     *Value `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Attrs      *Value `protobuf:"bytes,3,opt,name=attrs,proto3" json:"attrs,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{10}
}

func (x *Resource) GetIdentifier() *Value {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *Resource) GetConfig() *Value {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Resource) GetAttrs() *Value {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Value_StringValue
	//	*Value_IntValue
	//	*Value_FloatValue
	//	*Value_BoolValue
	//	*Value_List
	//	*Value_Map
	//	*Value_Identifier
	//	*Value_File
	//	*Value_Immutable
	//	*Value_Nil
	Type isValue_Type `protobuf_oneof:"type"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{11}
}

func (m *Value) GetType() isValue_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Value) GetStringValue() string {
	if x, ok := x.GetType().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Value) GetIntValue() uint32 {
	if x, ok := x.GetType().(*Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *Value) GetFloatValue() float32 {
	if x, ok := x.GetType().(*Value_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *Value) GetBoolValue() bool {
	if x, ok := x.GetType().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *Value) GetList() *ListValue {
	if x, ok := x.GetType().(*Value_List); ok {
		return x.List
	}
	return nil
}

func (x *Value) GetMap() *MapValue {
	if x, ok := x.GetType().(*Value_Map); ok {
		return x.Map
	}
	return nil
}

func (x *Value) GetIdentifier() *Identifier {
	if x, ok := x.GetType().(*Value_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (x *Value) GetFile() *FileValue {
	if x, ok := x.GetType().(*Value_File); ok {
		return x.File
	}
	return nil
}

func (x *Value) GetImmutable() *Immutable {
	if x, ok := x.GetType().(*Value_Immutable); ok {
		return x.Immutable
	}
	return nil
}

func (x *Value) GetNil() *Nil {
	if x, ok := x.GetType().(*Value_Nil); ok {
		return x.Nil
	}
	return nil
}

type isValue_Type interface {
	isValue_Type()
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_IntValue struct {
	IntValue uint32 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Value_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,3,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_List struct {
	List *ListValue `protobuf:"bytes,5,opt,name=list,proto3,oneof"`
}

type Value_Map struct {
	Map *MapValue `protobuf:"bytes,6,opt,name=map,proto3,oneof"`
}

type Value_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,7,opt,name=identifier,proto3,oneof"`
}

type Value_File struct {
	File *FileValue `protobuf:"bytes,8,opt,name=file,proto3,oneof"`
}

type Value_Immutable struct {
	Immutable *Immutable `protobuf:"bytes,9,opt,name=immutable,proto3,oneof"`
}

type Value_Nil struct {
	Nil *Nil `protobuf:"bytes,10,opt,name=nil,proto3,oneof"`
}

func (*Value_StringValue) isValue_Type() {}

func (*Value_IntValue) isValue_Type() {}

func (*Value_FloatValue) isValue_Type() {}

func (*Value_BoolValue) isValue_Type() {}

func (*Value_List) isValue_Type() {}

func (*Value_Map) isValue_Type() {}

func (*Value_Identifier) isValue_Type() {}

func (*Value_File) isValue_Type() {}

func (*Value_Immutable) isValue_Type() {}

func (*Value_Nil) isValue_Type() {}

type ListValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Value `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *ListValue) Reset() {
	*x = ListValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValue) ProtoMessage() {}

func (x *ListValue) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValue.ProtoReflect.Descriptor instead.
func (*ListValue) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{12}
}

func (x *ListValue) GetElements() []*Value {
	if x != nil {
		return x.Elements
	}
	return nil
}

type MapValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string]*Value `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapValue) Reset() {
	*x = MapValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapValue) ProtoMessage() {}

func (x *MapValue) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapValue.ProtoReflect.Descriptor instead.
func (*MapValue) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{13}
}

func (x *MapValue) GetEntries() map[string]*Value {
	if x != nil {
		return x.Entries
	}
	return nil
}

type FileValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Checksum string `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *FileValue) Reset() {
	*x = FileValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileValue) ProtoMessage() {}

func (x *FileValue) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileValue.ProtoReflect.Descriptor instead.
func (*FileValue) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{14}
}

func (x *FileValue) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileValue) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{15}
}

func (x *Identifier) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Identifier) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Immutable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Immutable) Reset() {
	*x = Immutable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Immutable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Immutable) ProtoMessage() {}

func (x *Immutable) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Immutable.ProtoReflect.Descriptor instead.
func (*Immutable) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{16}
}

func (x *Immutable) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Nil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Nil) Reset() {
	*x = Nil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nil) ProtoMessage() {}

func (x *Nil) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nil.ProtoReflect.Descriptor instead.
func (*Nil) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{17}
}

var File_provider_v1_provider_proto protoreflect.FileDescriptor

var file_provider_v1_provider_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x61, 0x6c,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x5b, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69,
	0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b,
	0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd8, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61,
	0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x39, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61,
	0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x5e, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x05,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x09, 0x73, 0x75, 0x62, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x47, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x46, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b,
	0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xcd, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74,
	0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b,
	0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x22, 0xa9, 0x04, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x6d,
	0x61, 0x70, 0x12, 0x4c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x3f, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61,
	0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x49, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69,
	0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x03,
	0x6e, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x69, 0x6c, 0x48, 0x00,
	0x52, 0x03, 0x6e, 0x69, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xbe, 0x01,
	0x0a, 0x08, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6c,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x61, 0x0a, 0x0c, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b,
	0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x5d, 0x0a, 0x0a, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x09, 0x49, 0x6d,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x05, 0x0a, 0x03, 0x4e, 0x69, 0x6c, 0x2a, 0x4c, 0x0a, 0x09, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x32, 0x85, 0x04, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x7f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x35, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68,
	0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x35, 0x2e, 0x61, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74,
	0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x6c,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x35, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x9d, 0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b,
	0x2f, 0x61, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x41, 0x50, 0xaa, 0x02,
	0x1e, 0x41, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x2e, 0x41, 0x74, 0x68, 0x61,
	0x6e, 0x6f, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x1e, 0x41, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x5c, 0x41, 0x74, 0x68,
	0x61, 0x6e, 0x6f, 0x72, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x2a, 0x41, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x5c, 0x41, 0x74,
	0x68, 0x61, 0x6e, 0x6f, 0x72, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x21,
	0x41, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x6b, 0x3a, 0x3a, 0x41, 0x74, 0x68, 0x61,
	0x6e, 0x6f, 0x72, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_provider_v1_provider_proto_rawDescOnce sync.Once
	file_provider_v1_provider_proto_rawDescData = file_provider_v1_provider_proto_rawDesc
)

func file_provider_v1_provider_proto_rawDescGZIP() []byte {
	file_provider_v1_provider_proto_rawDescOnce.Do(func() {
		file_provider_v1_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_provider_v1_provider_proto_rawDescData)
	})
	return file_provider_v1_provider_proto_rawDescData
}

var file_provider_v1_provider_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_provider_v1_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_provider_v1_provider_proto_goTypes = []interface{}{
	(Operation)(0),                 // 0: alchematik.athanor.provider.v1.Operation
	(*GetResourceRequest)(nil),     // 1: alchematik.athanor.provider.v1.GetResourceRequest
	(*GetResourceResponse)(nil),    // 2: alchematik.athanor.provider.v1.GetResourceResponse
	(*CreateResourceRequest)(nil),  // 3: alchematik.athanor.provider.v1.CreateResourceRequest
	(*CreateResourceResponse)(nil), // 4: alchematik.athanor.provider.v1.CreateResourceResponse
	(*DeleteResourceRequest)(nil),  // 5: alchematik.athanor.provider.v1.DeleteResourceRequest
	(*DeleteResourceResponse)(nil), // 6: alchematik.athanor.provider.v1.DeleteResourceResponse
	(*UpdateResourceRequest)(nil),  // 7: alchematik.athanor.provider.v1.UpdateResourceRequest
	(*UpdateResourceResponse)(nil), // 8: alchematik.athanor.provider.v1.UpdateResourceResponse
	(*Field)(nil),                  // 9: alchematik.athanor.provider.v1.Field
	(*State)(nil),                  // 10: alchematik.athanor.provider.v1.State
	(*Resource)(nil),               // 11: alchematik.athanor.provider.v1.Resource
	(*Value)(nil),                  // 12: alchematik.athanor.provider.v1.Value
	(*ListValue)(nil),              // 13: alchematik.athanor.provider.v1.ListValue
	(*MapValue)(nil),               // 14: alchematik.athanor.provider.v1.MapValue
	(*FileValue)(nil),              // 15: alchematik.athanor.provider.v1.FileValue
	(*Identifier)(nil),             // 16: alchematik.athanor.provider.v1.Identifier
	(*Immutable)(nil),              // 17: alchematik.athanor.provider.v1.Immutable
	(*Nil)(nil),                    // 18: alchematik.athanor.provider.v1.Nil
	nil,                            // 19: alchematik.athanor.provider.v1.MapValue.EntriesEntry
}
var file_provider_v1_provider_proto_depIdxs = []int32{
	12, // 0: alchematik.athanor.provider.v1.GetResourceRequest.identifier:type_name -> alchematik.athanor.provider.v1.Value
	11, // 1: alchematik.athanor.provider.v1.GetResourceResponse.resource:type_name -> alchematik.athanor.provider.v1.Resource
	12, // 2: alchematik.athanor.provider.v1.CreateResourceRequest.identifier:type_name -> alchematik.athanor.provider.v1.Value
	12, // 3: alchematik.athanor.provider.v1.CreateResourceRequest.config:type_name -> alchematik.athanor.provider.v1.Value
	11, // 4: alchematik.athanor.provider.v1.CreateResourceResponse.resource:type_name -> alchematik.athanor.provider.v1.Resource
	12, // 5: alchematik.athanor.provider.v1.DeleteResourceRequest.identifier:type_name -> alchematik.athanor.provider.v1.Value
	12, // 6: alchematik.athanor.provider.v1.UpdateResourceRequest.identifier:type_name -> alchematik.athanor.provider.v1.Value
	12, // 7: alchematik.athanor.provider.v1.UpdateResourceRequest.config:type_name -> alchematik.athanor.provider.v1.Value
	9,  // 8: alchematik.athanor.provider.v1.UpdateResourceRequest.mask:type_name -> alchematik.athanor.provider.v1.Field
	11, // 9: alchematik.athanor.provider.v1.UpdateResourceResponse.resource:type_name -> alchematik.athanor.provider.v1.Resource
	9,  // 10: alchematik.athanor.provider.v1.Field.sub_fields:type_name -> alchematik.athanor.provider.v1.Field
	0,  // 11: alchematik.athanor.provider.v1.Field.operation:type_name -> alchematik.athanor.provider.v1.Operation
	11, // 12: alchematik.athanor.provider.v1.State.resource:type_name -> alchematik.athanor.provider.v1.Resource
	12, // 13: alchematik.athanor.provider.v1.Resource.identifier:type_name -> alchematik.athanor.provider.v1.Value
	12, // 14: alchematik.athanor.provider.v1.Resource.config:type_name -> alchematik.athanor.provider.v1.Value
	12, // 15: alchematik.athanor.provider.v1.Resource.attrs:type_name -> alchematik.athanor.provider.v1.Value
	13, // 16: alchematik.athanor.provider.v1.Value.list:type_name -> alchematik.athanor.provider.v1.ListValue
	14, // 17: alchematik.athanor.provider.v1.Value.map:type_name -> alchematik.athanor.provider.v1.MapValue
	16, // 18: alchematik.athanor.provider.v1.Value.identifier:type_name -> alchematik.athanor.provider.v1.Identifier
	15, // 19: alchematik.athanor.provider.v1.Value.file:type_name -> alchematik.athanor.provider.v1.FileValue
	17, // 20: alchematik.athanor.provider.v1.Value.immutable:type_name -> alchematik.athanor.provider.v1.Immutable
	18, // 21: alchematik.athanor.provider.v1.Value.nil:type_name -> alchematik.athanor.provider.v1.Nil
	12, // 22: alchematik.athanor.provider.v1.ListValue.elements:type_name -> alchematik.athanor.provider.v1.Value
	19, // 23: alchematik.athanor.provider.v1.MapValue.entries:type_name -> alchematik.athanor.provider.v1.MapValue.EntriesEntry
	12, // 24: alchematik.athanor.provider.v1.Identifier.value:type_name -> alchematik.athanor.provider.v1.Value
	12, // 25: alchematik.athanor.provider.v1.Immutable.value:type_name -> alchematik.athanor.provider.v1.Value
	12, // 26: alchematik.athanor.provider.v1.MapValue.EntriesEntry.value:type_name -> alchematik.athanor.provider.v1.Value
	3,  // 27: alchematik.athanor.provider.v1.Provider.CreateResource:input_type -> alchematik.athanor.provider.v1.CreateResourceRequest
	5,  // 28: alchematik.athanor.provider.v1.Provider.DeleteResource:input_type -> alchematik.athanor.provider.v1.DeleteResourceRequest
	1,  // 29: alchematik.athanor.provider.v1.Provider.GetResource:input_type -> alchematik.athanor.provider.v1.GetResourceRequest
	7,  // 30: alchematik.athanor.provider.v1.Provider.UpdateResource:input_type -> alchematik.athanor.provider.v1.UpdateResourceRequest
	4,  // 31: alchematik.athanor.provider.v1.Provider.CreateResource:output_type -> alchematik.athanor.provider.v1.CreateResourceResponse
	6,  // 32: alchematik.athanor.provider.v1.Provider.DeleteResource:output_type -> alchematik.athanor.provider.v1.DeleteResourceResponse
	2,  // 33: alchematik.athanor.provider.v1.Provider.GetResource:output_type -> alchematik.athanor.provider.v1.GetResourceResponse
	8,  // 34: alchematik.athanor.provider.v1.Provider.UpdateResource:output_type -> alchematik.athanor.provider.v1.UpdateResourceResponse
	31, // [31:35] is the sub-list for method output_type
	27, // [27:31] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_provider_v1_provider_proto_init() }
func file_provider_v1_provider_proto_init() {
	if File_provider_v1_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_provider_v1_provider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Immutable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_provider_v1_provider_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*State_Resource)(nil),
	}
	file_provider_v1_provider_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*Value_StringValue)(nil),
		(*Value_IntValue)(nil),
		(*Value_FloatValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_List)(nil),
		(*Value_Map)(nil),
		(*Value_Identifier)(nil),
		(*Value_File)(nil),
		(*Value_Immutable)(nil),
		(*Value_Nil)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_provider_v1_provider_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_provider_v1_provider_proto_goTypes,
		DependencyIndexes: file_provider_v1_provider_proto_depIdxs,
		EnumInfos:         file_provider_v1_provider_proto_enumTypes,
		MessageInfos:      file_provider_v1_provider_proto_msgTypes,
	}.Build()
	File_provider_v1_provider_proto = out.File
	file_provider_v1_provider_proto_rawDesc = nil
	file_provider_v1_provider_proto_goTypes = nil
	file_provider_v1_provider_proto_depIdxs = nil
}
