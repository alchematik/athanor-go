// Code generated by athanor-go-translator.
// DO NOT EDIT.

package provider

import (
	sdk "github.com/alchematik/athanor-go/sdk/provider/value"
)

type BucketObjectAttrs struct {
}

func (x BucketObjectAttrs) ToValue() (sdk.Value, error) {

	return sdk.Map{}, nil

}

type BucketObjectConfig struct {
	Contents  string
	SomeField string
}

func (x BucketObjectConfig) ToValue() (sdk.Value, error) {
	contents, err := sdk.ToValue(x.Contents)
	if err != nil {
		return nil, err
	}
	some_field, err := sdk.ToValue(x.SomeField)
	if err != nil {
		return nil, err
	}

	return sdk.Map{
		"contents":   contents,
		"some_field": some_field,
	}, nil

}

type BucketObjectIdentifier struct {
	Bucket sdk.Identifier
	Name   string
}

func (x BucketObjectIdentifier) ResourceType() string {
	return "bucket_object"
}

func (x BucketObjectIdentifier) ToValue() (sdk.Value, error) {
	bucket, err := sdk.ToValue(x.Bucket)
	if err != nil {
		return nil, err
	}
	name, err := sdk.ToValue(x.Name)
	if err != nil {
		return nil, err
	}

	return sdk.Identifier{
		ResourceType: x.ResourceType(),
		Value: sdk.Map{
			"bucket": bucket,
			"name":   name,
		},
	}, nil

}
